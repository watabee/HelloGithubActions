name: Upload APK to App Distribution

on:
  workflow_dispatch:
    inputs:
      app-version:
        description: 'アプリのバージョン'
        required: true

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Download artifact
        uses: actions/github-script@v7
        with:
          script: |
            const workflows = await github.rest.actions.listRepoWorkflows({
               owner: context.repo.owner,
               repo: context.repo.repo,
            });
            
            const workflowFileName = 'build.yml';
            let workflowId = null;
            for (const workflow of workflows.data.workflows) {
              if (workflow.path.endsWith(workflowFileName)) {
                workflowId = workflow.id;
                break;
              }
            }            
            
            if (!workflowId) {
              throw new Error(`Workflow ${workflowFileName} not found`);
            }
            console.log(`Workflow ID: ${workflowId}`);
            
            const workflowRuns = await github.rest.actions.listWorkflowRuns({
               owner: context.repo.owner,
               repo: context.repo.repo,
               workflow_id: workflowId,
               status: 'completed',
               per_page: 1
            });
            
            if (workflowRuns.data.workflow_runs.length === 0) {
              throw new Error(`No completed workflow runs found for workflow ID ${workflowId}`);
            }

            const runId = workflowRuns.data.workflow_runs[0].id;
            console.log(`Run ID: ${runId}`);
            
            const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: runId
            });
            
            const matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name === "${{ inputs.app-version }}.apk"
            })[0];
            console.log(`matchArtifact = JSON.stringify(matchArtifact)`);
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            console.log(`success download`);
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/apk.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: |
          unzip apk.zip
          mv *.apk kanna.apk

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Upload to App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}
          FIREBASE_PROJECT_ID: hellogithubactions-b0f74
        run: |
          npx firebase appdistribution:distribute kanna.apk \
            --app 1:930094710384:android:009c054bfb510e226b3eb5

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: npm_logs
          path: |
            /home/runner/.npm/_logs
          retention-days: 1
